{"ast":null,"code":"import { getToDos } from './todos.selector';\nimport { addToDo, removeToDo } from '../todos/todos.actions';\nimport { v4 as uuidv4 } from 'uuid';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../todos-item/todos-item.component\";\n\nfunction TodosComponent_app_todos_item_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-todos-item\", 6);\n  }\n\n  if (rf & 2) {\n    const items_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"todo\", items_r1);\n  }\n}\n\nexport class TodosComponent {\n  constructor(store) {\n    this.store = store;\n    this.list$ = store.select(getToDos);\n  }\n\n  ngOnInit() {}\n\n  addToDo() {\n    this.newID = uuidv4(); // this.store.dispatch(addToDo({ content: this.newContent || 'Untitled'}));\n\n    this.store.dispatch(addToDo({\n      id: this.newID,\n      content: this.newContent || 'Untitled',\n      completed: false\n    }));\n    this.newContent = '';\n  }\n\n  removeToDo(id) {\n    this.store.dispatch(removeToDo({\n      id\n    }));\n  }\n\n}\n\nTodosComponent.ɵfac = function TodosComponent_Factory(t) {\n  return new (t || TodosComponent)(i0.ɵɵdirectiveInject(i1.Store));\n};\n\nTodosComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TodosComponent,\n  selectors: [[\"app-todos\"]],\n  decls: 11,\n  vars: 4,\n  consts: [[1, \"text-center\", \"m-4\"], [1, \"flex\", \"justify-center\"], [\"placeholder\", \"Type Your To Do Here!\", \"type\", \"text\", 1, \"overflow-ellipsis\", \"overflow-hidden\", \"font-sans\", \"border\", \"border-transparent\", \"m-4\", \"w-42\", \"py-3\", \"px-6\", \"rounded\", \"shadow-lg\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-purple-600\", \"focus:border-transparent\", \"focus:placeholder-gray-300\", \"placeholder-gray-500\", \"placeholder-opacity-75\", 3, \"ngModel\", \"ngModelChange\"], [1, \"font-sans\", \"shadow-lg\", \"m-4\", \"w-42\", \"py-3\", \"px-6\", \"text-white\", \"rounded-lg\", \"bg-purple-600\", \"hover:bg-purple-700\", \"shadow-lg\", \"block\", \"md:inline-block\", 3, \"click\"], [1, \"justify-center\"], [3, \"todo\", 4, \"ngFor\", \"ngForOf\"], [3, \"todo\"]],\n  template: function TodosComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"New To-Do\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 1);\n      i0.ɵɵelementStart(3, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function TodosComponent_Template_input_ngModelChange_3_listener($event) {\n        return ctx.newContent = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function TodosComponent_Template_button_click_4_listener() {\n        return ctx.addToDo();\n      });\n      i0.ɵɵtext(5, \" Add \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"h1\", 0);\n      i0.ɵɵtext(7, \"To Do List\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"main\", 4);\n      i0.ɵɵtemplate(9, TodosComponent_app_todos_item_9_Template, 1, 1, \"app-todos-item\", 5);\n      i0.ɵɵpipe(10, \"async\");\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.newContent);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(10, 2, ctx.list$));\n    }\n  },\n  directives: [i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel, i3.NgForOf, i4.TodosItemComponent],\n  pipes: [i3.AsyncPipe],\n  styles: [\"main[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n  margin-top: 20px;\\n}\\n\\napp-todo-item[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRvZG9zLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBQTtFQUNBLG1CQUFBO0VBQ0EsZ0JBQUE7QUFDSjs7QUFFQTtFQUNJLGFBQUE7RUFDQSx1QkFBQTtFQUNBLGtCQUFBO0FBQ0oiLCJmaWxlIjoidG9kb3MuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYWluIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgbWFyZ2luLXRvcDogMjBweDtcbn1cbiAgXG5hcHAtdG9kby1pdGVtIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn0iXX0= */\"]\n});","map":{"version":3,"sources":["/Users/meganyee/Desktop/projects/tic-tac-toe/src/app/todos/todos.component.ts","/Users/meganyee/Desktop/projects/tic-tac-toe/src/app/todos/todos.component.html"],"names":[],"mappings":"AAGA,SAAS,QAAT,QAAyB,kBAAzB;AACA,SAAS,OAAT,EAAkB,UAAlB,QAAoC,wBAApC;AAEA,SAAS,EAAE,IAAI,MAAf,QAA6B,MAA7B;;;;;;;;;ACkBI,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA,EAAA,gBAAA,EAAA,CAAA;;;;;AAEI,IAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,QAAA;;;;ADbR,OAAM,MAAO,cAAP,CAAqB;AAOzB,EAAA,WAAA,CAAoB,KAApB,EAAiD;AAA7B,SAAA,KAAA,GAAA,KAAA;AAClB,SAAK,KAAL,GAAa,KAAK,CAAC,MAAN,CAAa,QAAb,CAAb;AACD;;AAED,EAAA,QAAQ,GAAA,CACP;;AAED,EAAA,OAAO,GAAA;AACL,SAAK,KAAL,GAAa,MAAM,EAAnB,CADK,CAEL;;AACA,SAAK,KAAL,CAAW,QAAX,CAAoB,OAAO,CAAC;AAAE,MAAA,EAAE,EAAE,KAAK,KAAX;AAAkB,MAAA,OAAO,EAAE,KAAK,UAAL,IAAmB,UAA9C;AAA0D,MAAA,SAAS,EAAE;AAArE,KAAD,CAA3B;AACA,SAAK,UAAL,GAAkB,EAAlB;AACD;;AAED,EAAA,UAAU,CAAC,EAAD,EAAW;AACnB,SAAK,KAAL,CAAW,QAAX,CAAoB,UAAU,CAAC;AAAC,MAAA;AAAD,KAAD,CAA9B;AACD;;AAvBwB;;;mBAAd,c,EAAc,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,KAAA,C;AAAA,C;;;QAAd,c;AAAc,EAAA,SAAA,EAAA,CAAA,CAAA,WAAA,CAAA,C;AAAA,EAAA,KAAA,EAAA,E;AAAA,EAAA,IAAA,EAAA,C;AAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,aAAA,EAAA,KAAA,CAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,gBAAA,CAAA,EAAA,CAAA,aAAA,EAAA,uBAAA,EAAA,MAAA,EAAA,MAAA,EAAA,CAAA,EAAA,mBAAA,EAAA,iBAAA,EAAA,WAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,KAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,SAAA,EAAA,WAAA,EAAA,oBAAA,EAAA,cAAA,EAAA,uBAAA,EAAA,0BAAA,EAAA,4BAAA,EAAA,sBAAA,EAAA,wBAAA,EAAA,CAAA,EAAA,SAAA,EAAA,eAAA,CAAA,EAAA,CAAA,CAAA,EAAA,WAAA,EAAA,WAAA,EAAA,KAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,YAAA,EAAA,YAAA,EAAA,eAAA,EAAA,qBAAA,EAAA,WAAA,EAAA,OAAA,EAAA,iBAAA,EAAA,CAAA,EAAA,OAAA,CAAA,EAAA,CAAA,CAAA,EAAA,gBAAA,CAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,CAAA,EAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,CAAA,EAAA,MAAA,CAAA,C;AAAA,EAAA,QAAA,EAAA,SAAA,uBAAA,CAAA,EAAA,EAAA,GAAA,EAAA;AAAA,QAAA,EAAA,GAAA,CAAA,EAAA;ACb3B,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA,EAAA,CAAA;AAA4B,MAAA,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,WAAA;AAAS,MAAA,EAAA,CAAA,YAAA;AACrC,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA;AACI,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,OAAA,EAAA,CAAA;AAII,MAAA,EAAA,CAAA,UAAA,CAAA,eAAA,EAAA,SAAA,sDAAA,CAAA,MAAA,EAAA;AAAA,eAAA,GAAA,CAAA,UAAA,GAAA,MAAA;AAAA,OAAA;AAJJ,MAAA,EAAA,CAAA,YAAA;AAMA,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,QAAA,EAAA,CAAA;AAEI,MAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,+CAAA,GAAA;AAAA,eAAS,GAAA,CAAA,OAAA,EAAT;AAAkB,OAAlB;AAEA,MAAA,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,OAAA;AACJ,MAAA,EAAA,CAAA,YAAA;AACJ,MAAA,EAAA,CAAA,YAAA;AACA,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA,EAAA,CAAA;AAA4B,MAAA,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,YAAA;AAAU,MAAA,EAAA,CAAA,YAAA;AAQtC,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,MAAA,EAAA,CAAA;AACI,MAAA,EAAA,CAAA,UAAA,CAAA,CAAA,EAAA,wCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,gBAAA,EAAA,CAAA;;AAIJ,MAAA,EAAA,CAAA,YAAA;;;;AAtBQ,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,UAAA;AAmBkB,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,SAAA,EAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,CAAA,EAAA,GAAA,CAAA,KAAA,CAAA","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { getToDos } from './todos.selector';\nimport { addToDo, removeToDo } from '../todos/todos.actions';\nimport { ToDo } from './todos.selector';\nimport { v4 as uuidv4 } from 'uuid';\n\n@Component({\n  selector: 'app-todos',\n  templateUrl: './todos.component.html',\n  styleUrls: ['./todos.component.scss']\n})\nexport class TodosComponent implements OnInit {\n  todoArray: Array<ToDo>;\n  list$: Observable<ToDo[]>;\n  todos: any[];\n  newContent: string;\n  newID: number;\n\n  constructor(private store: Store<{ todoDetails }>) {\n    this.list$ = store.select(getToDos);\n  }\n    \n  ngOnInit() {\n  }\n\n  addToDo() {\n    this.newID = uuidv4();\n    // this.store.dispatch(addToDo({ content: this.newContent || 'Untitled'}));\n    this.store.dispatch(addToDo({ id: this.newID, content: this.newContent || 'Untitled', completed: false }));\n    this.newContent = '';\n  }\n\n  removeToDo(id: number) {\n    this.store.dispatch(removeToDo({id}));\n  }\n}\n","<h1 class=\"text-center m-4\">New To-Do</h1>\n<div class=\"flex justify-center\">\n    <input \n        class=\"overflow-ellipsis overflow-hidden font-sans border border-transparent m-4 w-42 py-3 px-6 rounded shadow-lg focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent focus:placeholder-gray-300 placeholder-gray-500 placeholder-opacity-75\"   \n        placeholder=\"Type Your To Do Here!\"\n        type=\"text\"\n        [(ngModel)]=\"newContent\"\n    >\n    <button    \n        class=\"font-sans shadow-lg m-4 w-42 py-3 px-6 text-white rounded-lg bg-purple-600 hover:bg-purple-700 shadow-lg block md:inline-block\"\n        (click)=\"addToDo()\"\n    >\n        Add\n    </button>\n</div>\n<h1 class=\"text-center m-4\">To Do List</h1>\n<!-- <app-todos-item\n    class=\"text-center m-4\"\n    *ngFor=\"let val of todos; let i = index\" \n    [todo]=\"val\"\n    (click)=\"addToDo()\"\n>\n</app-todos-item> -->\n<main class=\"justify-center\">\n    <app-todos-item \n        *ngFor=\"let items of list$ | async\"\n        [todo] = \"items\">\n    </app-todos-item>\n</main>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}